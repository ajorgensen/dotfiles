(require 'package)

(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))

(setq package-enable-at-startup nil)
(package-initialize)

(defun ensure-package-installed (&rest packages)
    "Assure every package is installed, ask for installation if itâ€™s not.

Return a list of installed packages or nil for every skipped package."
    (mapcar
     (lambda (package)
       (if (package-installed-p package)
	   nil
	 (if (y-or-n-p (format "Package %s is missing. Install it? " package))
	     (package-install package)
	   package)))
     packages))

;; Make sure to have downloaded archive description.
(or (file-exists-p package-user-dir)
    (package-refresh-contents))

;; Activate installed packages
(package-initialize)

(ensure-package-installed 'iedit
			  'magit
			  'powerline
			  'evil
			  'evil-leader
			  'helm
			  'relative-line-numbers)

;; EVIL MODE CONFIG
(require 'evil)
(require 'evil-leader)
(global-evil-leader-mode)
(evil-mode t)

(evil-leader/set-leader ",")
(evil-leader/set-key "w" 'save-buffer)
(evil-leader/set-key "q" 'kill-buffer-and-window)
(evil-leader/set-key "e" 'helm-find-file)

;; HELM CONFIG
(require 'helm-config)
(helm-mode 1)

;; POWERLINE CONFIG
(require 'powerline)
(powerline-vim-theme)

;; RELATIVE LINE NUMBERS 
(require 'relative-line-numbers)
(global-relative-line-numbers-mode)
(setq relative-line-numbers-format
      '(lambda (offset)
	 (format "%4d \u2502 " (abs offset))))
