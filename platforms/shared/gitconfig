[user]
  name = Andrew Jorgensen
  email = andrew@andrewjorgensen.com
  signingkey = B10424F37FA56977
[github]
  user = ajorgensen
[core]
  pager = diff-so-fancy | less --tabs=4 -RFX
  excludesfile = ~/.gitignore
[diff]
[color]
    ui = auto
[color "diff-highlight"]
	  oldNormal = red
	  oldHighlight = red "#500000"
	  newNormal = green
	  newHighlight = green "#003000"
[color "diff"]
	  meta = 11
	  frag = magenta bold
	  commit = yellow bold
	  old = red
	  new = green
	  whitespace = "#ffff00" reverse
[merge]
    tool = vimdiff
[diff-so-fancy]
    stripLeadingSymbols = false
    markEmptyLines = false
[commit]
  gpgsign = true
	verbose = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[include]
	path = /Users/ajorgensen/code/dev-box/dotfiles/gitconfig
[alias]
  aa = add --all
  amend = commit --amend
  ci = commit --verbose
  co = checkout
  dc = diff --find-copies-harder --cached
  dh1 = diff HEAD~1
  di = diff --find-copies-harder
  ds = diff --stat=160,120
  fa = fetch --all
  ff = merge --ff-only
  noff = merge --no-ff
  p = put
  pom = push origin master
  st = status

  b = "!. ~/.githelpers && pretty_git_branch"
  bs = "!. ~/.githelpers && pretty_git_branch_sorted"
  cp = cherry-pick
  h = !git head
  head = !git r -1
  hp = "!. ~/.githelpers && show_git_head"
  l = "!. ~/.githelpers && pretty_git_log"
  la = !git l --all
  pf = push --force-with-lease
  r = !GIT_NO_PAGER=1 git l -30
  ra = !git r --all
  ski = !git stash --keep-index

  branch-name = "!git rev-parse --abbrev-ref HEAD"
  put = "!git push -u origin $(git branch-name)"
  delete = "!git push origin :$(git branch-name)"
  fix-to-base = "!git rebase -i $(git merge-base $(git branch-name) master)"
  sync = "!git fetch -p && git rebase origin/master"

  fresh = !sh -c \"git checkout -b \\$0 && git reset --hard origin/master\"

  done = "!BRANCH=$(git branch-name); f() { git checkout master && git branch -D $BRANCH; }; f"
  rmbr = "!f() { git branch -D $@ && git push origin --delete $@; }; f"
  cleanup = "!BRANCH=$(git branch-name); f() { git checkout master && git rmbr $BRANCH; }; f"
  rmremote = !sh -c \"git push origin --delete \\$0\"
