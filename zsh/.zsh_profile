export XDG_CONFIG_HOME="$HOME/.config"

export SHELL="zsh"
export EDITOR="nvim"
alias vim="nvim"
alias e="nvim"

addToPath() {
    if [[ "$PATH" != *"$1"* ]]; then
        export PATH=$PATH:$1
    fi
}

addToPathFront() {
    if [[ "$PATH" != *"$1"* ]]; then
        export PATH=$1:$PATH
    fi
}

addToPathFront $HOME/go/bin
addToPathFront $HOME/.local/bin
addToPathFront $HOME/.local/sbin

docker_rm_stopped() {
  docker rm $(docker ps -a -q)
}

if ! pgrep -x -u "${USER}" gpg-agent >/dev/null 2>&1; then
  gpg-connect-agent /bye >/dev/null 2>&1
fi
alias gpg-unlock="gpg-connect-agent updatestartuptty /bye"

include () {
    [[ -f "$1" ]] && source $1
}

include $HOME/.local.zshrc
include $HOME/.zsh/aliases
include $HOME/.zsh/funcs

zstyle ':completion:*:*:make:*' tag-order 'targets'

### Functions for setting and getting environment variables from the OSX keychain ###
### Adapted from https://www.netmeister.org/blog/keychain-passwords.html ###

# Use: keychain-environment-variable SECRET_ENV_VAR
function keychain-environment-variable () {
    security find-generic-password -w -a ${USER} -D "environment variable" -s "${1}"
}

# Use: set-keychain-environment-variable SECRET_ENV_VAR
#   provide: super_secret_key_abc123
function set-keychain-environment-variable () {
    [ -n "$1" ] || print "Missing environment variable name"
    
    # Note: if using bash, use `-p` to indicate a prompt string, rather than the leading `?`
    read -s "?Enter Value for ${1}: " secret
    
    ( [ -n "$1" ] && [ -n "$secret" ] ) || return 1
    security add-generic-password -U -a ${USER} -D "environment variable" -s "${1}" -w "${secret}"
}
