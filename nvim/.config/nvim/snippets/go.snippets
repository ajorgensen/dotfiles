snippet errp
	if err != nil {
		panic(err)
	}

snippet ferr "if err"
	if err != nil {
		$0
	}

snippet reterr
	if err != nil {
		return err
	}

snippet ctxarg
	ctx context.Context

snippet pln "println"
	fmt.Println($0)

snippet ehandler "Endpoint handler"
	func $1(w http.ResponseWriter, r *http.Request) {
		$0
	}

snippet mainf "main boilerplat"
	package main

	import "fmt"

	func main() {
		$0fmt.Println("Hello World")
	}

snippet pf "debug print statment"
	fmt.Printf("$1: %+v", $0)

snippet test "func TestXYZ(t *testing.T) { ... }"
	func Test${1:Function}(t *testing.T) {
		${0:${VISUAL}}
	}

snippet tabletest
  tests := map[string]struct {
        input string
        sep   string
        want  []string
    }{
        "simple":       {input: "a/b/c", sep: "/", want: []string{"a", "b", "c"}},
    }

    for name, tc := range tests {
        t.Run(name, func(t *testing.T) {
            got := Split(tc.input, tc.sep)
            diff := cmp.Diff(tc.want, got)
            if diff != "" {
                t.Fatalf(diff)
            }
        })
    }	
